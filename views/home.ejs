<section class="mb-8">
  <h1 class="text-3xl md:text-4xl font-bold tracking-tight mb-3">Agile ways of working</h1>
  <p class="text-slate-600">A home for your Markdown-powered articles, automatically discovered from <code class="font-mono bg-slate-100 px-1.5 py-0.5 rounded">./data/docs</code>.</p>
</section>

<section class="mb-6">
  <div class="flex flex-col md:flex-row md:items-center gap-3">
    <div class="relative flex-1">
      <input
        id="search"
        type="search"
        placeholder="Search by title or tag..."
        class="w-full rounded-lg border border-slate-300 bg-white px-4 py-2.5 pr-10 text-slate-900 placeholder-slate-400 shadow-sm outline-none focus:border-brand-600 focus:ring-2 focus:ring-brand-100"
      />
      <svg class="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-slate-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.8" d="M21 21l-4.35-4.35M11 19a8 8 0 1 1 0-16 8 8 0 0 1 0 16Z" />
      </svg>
    </div>
  </div>
</section>

<section>
  <% if (!articles || !articles.length) { %>
    <div class="rounded-xl border border-dashed border-slate-300 bg-white p-8 text-center text-slate-600">
      <p class="mb-2">No articles were found.</p>
      <p class="text-sm">Add .md files under <span class="font-mono bg-slate-100 px-1.5 py-0.5 rounded">./data/docs</span> and refresh.</p>
    </div>
  <% } else { %>
    <ul id="grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <% articles.forEach(a => { %>
        <li
          class="group rounded-xl border border-slate-200 bg-white p-5 shadow-sm hover:shadow-md transition-shadow"
          data-title="<%= (a.title || '').toLowerCase() %>"
          data-tags="<%= (a.tags || []).map(t => String(t).toLowerCase()).join(' ') %>"
        >
          <div class="flex items-start justify-between gap-4">
            <div>
              <h2 class="text-lg font-semibold leading-snug group-hover:text-brand-700">
                <a class="hover:underline" href="/<%= a.slug %>"><%= a.title %></a>
              </h2>
              <% if (a.date) { %>
                <p class="mt-0.5 text-xs text-slate-500"><%= new Date(a.date).toLocaleDateString() %></p>
              <% } %>
            </div>
            <% if (a.tags && a.tags.length) { %>
              <div class="flex flex-wrap gap-1.5 justify-end">
                <% a.tags.slice(0, 3).forEach(tag => { %>
                  <span class="inline-block rounded-full bg-slate-100 text-slate-700 text-xs px-2 py-1"><%= tag %></span>
                <% }) %>
                <% if (a.tags.length > 3) { %>
                  <span class="inline-block rounded-full bg-slate-100 text-slate-700 text-xs px-2 py-1">+<%= a.tags.length - 3 %></span>
                <% } %>
              </div>
            <% } %>
          </div>
          <% if (a.description) { %>
            <p class="mt-3 text-sm text-slate-700 line-clamp-3"><%= a.description %></p>
          <% } %>
          <div class="mt-4">
            <a href="/<%= a.slug %>" class="inline-flex items-center gap-1 text-sm font-medium text-brand-700 group-hover:gap-1.5 transition-all">
              Read more
              <svg class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 0 1 1.414 0l5 5a1 1 0 0 1 0 1.414l-5 5a1 1 0 1 1-1.414-1.414L13.586 11H4a1 1 0 1 1 0-2h9.586l-3.293-3.293a1 1 0 0 1 0-1.414Z" clip-rule="evenodd" />
              </svg>
            </a>
          </div>
        </li>
      <% }) %>
    </ul>
  <% } %>
</section>

<script>
  // Simple client-side filter by title or tag
  const input = document.getElementById('search');
  const grid = document.getElementById('grid');

  function applyFilter() {
    if (!grid) return;
    const q = (input.value || '').trim().toLowerCase();
    const items = Array.from(grid.children);
    let visible = 0;
    for (const li of items) {
      const t = li.dataset.title || '';
      const tags = li.dataset.tags || '';
      const isMatch = !q || t.includes(q) || tags.includes(q);
      li.style.display = isMatch ? '' : 'none';
      if (isMatch) visible++;
    }
  }

  if (input) {
    input.addEventListener('input', applyFilter);
  }
</script>
